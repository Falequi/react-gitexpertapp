{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGriditem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setinputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGriditem","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAIaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EACVC,mBAAS,IADC,mBACvCC,EADuC,KAC3BC,EAD2B,KAgB9C,OACI,sBAAMC,SAVW,SAACC,GAClBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAmBO,OACrCN,EAAc,MAKlB,SACA,uBACIO,KAAO,OACPC,MAAUT,EACVU,SAlBkB,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,a,+BCRlBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACbC,EADa,iDAEyBC,UAAWH,GAFpC,+DAIAI,MAAMF,GAJN,cAIbG,EAJa,gBAKIA,EAAKC,OALT,uBAKXC,EALW,EAKXA,KAEFC,EAAOD,EAAKE,KAAI,SAACC,GAAS,IAAD,EAC7B,MAAO,CACLC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAXnB,kBAefM,GAfe,4CAAH,sDCEPO,EAAc,SAAC,GAAuB,EAArBJ,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IACvC,OACE,sBAAKc,UAAU,uBAAf,UACE,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAIA,QCFGO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAAe,ECDb,SAACA,GAAY,IAAD,EACTd,mBAAS,CAC/BqB,KAAM,GACNa,SAAS,IAHsB,mBAC5BC,EAD4B,KACrBC,EADqB,KAiBnC,OAXAC,qBAAU,WACNxB,EAAQC,GACPwB,MAAK,SAAAC,GACCH,EAAS,CACLf,KAAMkB,EACNL,SAAQ,SAGrB,CAACpB,IAGIqB,EDfwBK,CAAa1B,GAAjCa,EADyB,EAC/BN,KAAca,EADiB,EACjBA,QAEtB,OACE,qCACE,qBAAIJ,UAAU,kBAAd,cAAkChB,EAAlC,OAECoB,GAAW,yCACZ,qBAAKJ,UAAU,YAAf,SACGH,EAAOJ,KAAI,SAACC,GAAD,OACV,cAAC,EAAD,eAA8BA,GAAZA,EAAIC,aEVnBgB,EAAe,WAAO,IAAD,EAEMzC,mBAAS,CAAC,cAFhB,mBAEvB0C,EAFuB,KAEX3C,EAFW,KAQ9B,OACI,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAgBA,IAC7B,uBAEA,6BAEI2C,EAAWnB,KAAI,SAAAT,GAAQ,OACvB,cAAC,EAAD,CAEAA,SAAWA,GADLA,Y,MCjBtB6B,IAASC,OAAO,cAAC,EAAD,IAAkBC,SAASC,eAAe,W","file":"static/js/main.d60a1fd2.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\n// import { GifExpertApp } from '../GifExpertApp';\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport const AddCategory = ({ setCategories }) => {\r\n    const [inputValue, setinputValue] = useState(\"\");\r\n\r\n    const handleInputChange = (e) => {\r\n        setinputValue(e.target.value);\r\n    };\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if (inputValue.trim().length > 2) {\r\n            setCategories(cats => [inputValue,...cats]);\r\n            setinputValue(\"\");\r\n        }\r\n    }\r\n\r\n    return ( \r\n        <form onSubmit = { handleSubmit } >\r\n        <input \r\n            type = \"text\"\r\n            value = { inputValue }\r\n            onChange = { handleInputChange }\r\n        /> \r\n        </form>\r\n    );\r\n};\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}","export const getGifs = async (category) => {\r\n    const url =\r\n      `https://api.giphy.com/v1/gifs/search?q=${encodeURI (category)}&limit=10&api_key=bbWLF39HIZnk340pgHuN0UhzSqjJ7Jqn`;\r\n\r\n    const resp = await fetch(url);\r\n    const { data } = await resp.json();\r\n\r\n    const gifs = data.map((img) => {\r\n      return {\r\n        id: img.id,\r\n        title: img.title,\r\n        url: img.images?.downsized_medium.url,\r\n      }\r\n    })\r\n\r\n return gifs;\r\n  }","import React from \"react\";\r\n\r\nexport const GifGriditem = ({ id, title, url }) => {\r\n  return (\r\n    <div className=\"card animate__fadeIn\">\r\n      <img src={url} alt={title} />\r\n      <p>{title}</p>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { useFetchGifs } from \"../hooks/useFetchGifs\";\r\nimport { GifGriditem } from \"./GifGriditem\";\r\n\r\nexport const GifGrid = ({ category }) => {\r\n  const { data: images, loading } = useFetchGifs(category);\r\n\r\n  return (\r\n    <>\r\n      <h3 className=\"animate__fadeIn\"> {category} </h3>\r\n\r\n      {loading && <p>Loading </p>}\r\n      <div className=\"card-grid\">\r\n        {images.map((img) => (\r\n          <GifGriditem key={img.id} {...img} />\r\n        ))}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","import { useEffect, useState } from \"react\"\r\nimport {getGifs} from '../helpers/getGifs'\r\n\r\nexport const useFetchGifs = (category)=>{\r\n     const [state, setstate] = useState({\r\n         data: [],\r\n         loading: true\r\n     });\r\n\r\n     useEffect(()=>{\r\n         getGifs(category)\r\n         .then(imgs=>{\r\n                setstate({\r\n                    data: imgs,\r\n                    loading:false\r\n                })\r\n         })\r\n     },[category])\r\n\r\n\r\n     return state;\r\n}","import React, { useState } from 'react'\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n    const [categories, setCategories] = useState(['One Punch']);\r\n\r\n    // const handleAdd = ()=>{\r\n    //     setcategories([...categories,'Simsomps']);\r\n    // }\r\n\r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategories={ setCategories }/>\r\n            <hr/>\r\n\r\n            <ol>\r\n            {\r\n                categories.map(category => (\r\n                <GifGrid \r\n                key={ category }\r\n                category={ category}\r\n                />\r\n                ))\r\n            }\r\n            </ol>\r\n        </>\r\n    )\r\n}\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { GifExpertApp } from \"./GifExpertApp\";\nimport \"./index.css\";\n\nReactDOM.render(<GifExpertApp />, document.getElementById(\"root\"));\n"],"sourceRoot":""}